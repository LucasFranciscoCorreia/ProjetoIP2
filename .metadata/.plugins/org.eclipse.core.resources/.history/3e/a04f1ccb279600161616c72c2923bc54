package br.ufrpe;

import java.time.LocalDate;

public class Caixa {
	public static class Dia{
		private double balcao;
		private LocalDate dia;
		public Dia(){
			balcao = 0;
			dia = LocalDate.now();
		}
		public double getCaixa() {
			return balcao;
		}
		public LocalDate getDia() {
			if (dia == null) {
				dia = LocalDate.now();
			}
			return dia;
		}
		public void addCaixa(double valor){
			balcao += valor;
		}
	}
	private Dia[] caixa;
	private LocalDate hoje;
	private static Caixa c;
	private int i;
	private Caixa(){
		caixa = new Dia[1];
		i= 0;
	}
	public static synchronized Caixa getInstance(){
		if (c == null) {
			c = new Caixa();
		}
		return c;
	}
	public void addCaixa(double valor){
		boolean res = false;
		Dia c;
		hoje = LocalDate.now();
		if (caixa[caixa.length-1] != null && hoje.equals(caixa[caixa.length-1].getDia())) {
			c = caixa[caixa.length-1];
		}else{
			c = new Dia();
			res = true;
		}
		c.addCaixa(valor);
		System.out.println(c.getCaixa());
		if (res) {
			addDia(c);
		}
	}
	private void addDia(Dia d){
		caixa[i] = d;
		i++;
		if(i == caixa.length){
			duplicarVetor();
		}
	}
	private void duplicarVetor(){
		int tam = 2*caixa.length;
		Dia vetor[] = new Dia[tam];
		for(int i = 0; i < caixa.length;i++){
			vetor[i] = caixa[i];
		}
		caixa = vetor;
	}
	public double valorArrecadadoHoje(){
		double res;
		System.out.println("ok");
		hoje = LocalDate.now();
		System.out.println(hoje);
		System.out.println(caixa[caixa.length-1].getDia());
		if (caixa[caixa.length-1] != null && hoje.equals(caixa[caixa.length-1].getDia())) {
			res =  caixa[caixa.length-1].getCaixa();
		}else{
			res = 0;
		}
		return res;
	}
}