package br.ufrpe.negocios;

import br.ufrpe.beans.Pessoa;
import br.ufrpe.dados.IControladorPessoa;
import br.ufrpe.dados.IRepositorioPessoa;
import br.ufrpe.expectionsProjeto.ErroAoRemoverException;
import br.ufrpe.expectionsProjeto.ErroAoSalvarException;
import br.ufrpe.expectionsProjeto.PessoaNaoExisteException;
import br.ufrpe.repositorios.RepositorioPessoa;

public class ControladorPessoa implements IControladorPessoa {
	private IRepositorioPessoa repositorio;
	
	public ControladorPessoa(IRepositorioPessoa instance){
		repositorio = instance;
	}
	public Pessoa pesquisar(String cpf) throws PessoaNaoExisteException{
		if(cpf == null){
			throw new IllegalArgumentException("CPF invalido!");
		}else{
			Pessoa pessoa = repositorio.buscar(cpf);
			return pessoa;
		}
	}
	public void cadastrar(Pessoa novo) throws PessoaNaoExisteException, ErroAoSalvarException{
		if(novo == null){
			throw new IllegalArgumentException("Pessoa invalida!");
		}else{
			try{
				Pessoa pesquisado = repositorio.buscar(novo.getCpf());
			}catch(PessoaNaoExisteException E){
				repositorio.cadastrar(novo);
			}		
		}
	}
	
	public void remover(String cpf) throws PessoaNaoExisteException, ErroAoRemoverException{
		if(cpf == null){
			throw new IllegalArgumentException("CPF invalido!");
		}else{
			try{
				Pessoa pesquisado = repositorio.buscar(cpf);
			}catch(PessoaNaoExisteException E){
				
			}
		}
	}
	public void listar(){
		System.out.println(repositorio.listar());
	}
	
	@Override
	public boolean atualizarPessoa(Pessoa novo) {
		// TODO Auto-generated method stub
		return false;
	}
}
