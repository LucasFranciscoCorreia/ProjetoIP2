package br.ufrpe.negocios;
import br.ufrpe.beans.Cliente;
import br.ufrpe.dados.IControladorCliente;
import br.ufrpe.dados.IRepositorioCliente;
import br.ufrpe.repositorios.ClienteInvalidoException;
import br.ufrpe.repositorios.ClienteJaExisteException;
import br.ufrpe.repositorios.ClienteNaoEncontradoException;
import br.ufrpe.repositorios.ClienteNaoExisteException;
import br.ufrpe.repositorios.RepositorioCliente;
public class ControladorCliente implements IControladorCliente {
	private IRepositorioCliente repo;
	
	public ControladorCliente(IRepositorioCliente instance){
		repo = RepositorioCliente.getInstance();
	}
	public void cadastrar(Cliente novo) throws ClienteJaExisteException, ClienteInvalidoException{
		if (novo != null) {
			repo.cadastrar(novo);
		}else{
			throw new ClienteInvalidoException(novo);
		}
		
	}
	public void remover(String cpf) throws ClienteNaoExisteException, ClienteNaoEncontradoException{
		if (cpf != null) {
			repo.remover(cpf);
		}else{
			throw new ClienteInvalidoException(cpf);
		}
	}
	public void atualizar(Cliente novo){
		if (novo != null) {
			boolean ok = repo.remover(novo.getCpf());
			if (ok){
				repo.cadastrar(novo);	
				System.out.println("Usuario atualizado com sucesso");
			}else{
				System.out.println("Cliente nao encontrado");
			}
		}else{
			System.out.println("Clientes Invalidos");
		}
	}
	public Cliente buscar(String cpf){
		if (cpf != null){
			Cliente c= repo.buscar(cpf);
			if (c != null) {
				return c;
			}else{
				System.out.println("Cliente nao encontrado");
			}
		}else{
			System.out.println("CPF invaldo");
		}
		return null;
	}
	public void listar(){
		System.out.println(repo.listar());
	}
}