package br.ufrpe.negocios;

import br.ufrpe.beans.Funcionario;
import br.ufrpe.dados.IControladorFuncionario;
import br.ufrpe.dados.IRepositorioFuncionario;
import br.ufrpe.repositorios.FuncionarioNaoExisteException;

public class ControladorFuncionario implements IControladorFuncionario{
	private IRepositorioFuncionario repositorioFuncionario;
	
	public ControladorFuncionario(IRepositorioFuncionario instance){
		repositorioFuncionario = instance;
	}
	public void cadastrar(Funcionario funcionario){
		if(funcionario == null){
			throw new IllegalArgumentException("Parametro inválido");
		}else{
			try{
				Funcionario pesquisado = repositorioFuncionario.buscar(funcionario.getCpf());
			}catch(FuncionarioNaoExisteException f){
				this.repositorioFuncionario.cadastrar(funcionario);
			}			
		}
	}
	
	public void remover(String cpf){
		if(cpf != null){
			Funcionario verificar = repositorioFuncionario.buscar(cpf);
			
			if(verificar != null){
				return repositorioFuncionario.remover(cpf);
			}
		}
		return false;
	}
	
	public Funcionario pesquisar(String cpf){
		if(cpf != null){
			Funcionario verificar = repositorioFuncionario.buscar(cpf);
			if(verificar != null){
				return verificar;
			}else{return null;}
		}else{return null;}
	}
	
	public void atualizar(Funcionario novo){
		if(novo != null){
			Funcionario verificar = repositorioFuncionario.buscar(novo);
			
			if(verificar != null){
				repositorioFuncionario.atualizar(novo);
				return true;
			}
		}
		
		return false;
	}
	
}
